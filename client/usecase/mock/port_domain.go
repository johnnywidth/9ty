// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/johnnywidth/9ty/client/usecase (interfaces: PortDomainService)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	entity "github.com/johnnywidth/9ty/client/entity"
	reflect "reflect"
)

// MockPortDomainService is a mock of PortDomainService interface
type MockPortDomainService struct {
	ctrl     *gomock.Controller
	recorder *MockPortDomainServiceMockRecorder
}

// MockPortDomainServiceMockRecorder is the mock recorder for MockPortDomainService
type MockPortDomainServiceMockRecorder struct {
	mock *MockPortDomainService
}

// NewMockPortDomainService creates a new mock instance
func NewMockPortDomainService(ctrl *gomock.Controller) *MockPortDomainService {
	mock := &MockPortDomainService{ctrl: ctrl}
	mock.recorder = &MockPortDomainServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPortDomainService) EXPECT() *MockPortDomainServiceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockPortDomainService) Create(arg0 context.Context, arg1 string, arg2 *entity.PortData) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockPortDomainServiceMockRecorder) Create(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockPortDomainService)(nil).Create), arg0, arg1, arg2)
}

// Get mocks base method
func (m *MockPortDomainService) Get(arg0 context.Context, arg1 string) (*entity.PortData, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(*entity.PortData)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockPortDomainServiceMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPortDomainService)(nil).Get), arg0, arg1)
}
